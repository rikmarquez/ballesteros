const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function verifyMigration() {
  try {
    console.log('üîç Verificando migraci√≥n...\n')

    // Verificar empresas
    const empresas = await prisma.empresa.findMany()
    console.log('‚úÖ Empresas creadas:', empresas.length)
    empresas.forEach(e => console.log(`   - ${e.nombre} (ID: ${e.id})`))

    // Verificar categor√≠as
    const categorias = await prisma.categoriaGasto.findMany({
      include: { subcategorias: true }
    })
    console.log('\n‚úÖ Categor√≠as creadas:', categorias.length)
    categorias.forEach(c => {
      console.log(`   - ${c.nombre}: ${c.subcategorias.length} subcategor√≠as`)
    })

    // Verificar cuentas
    const cuentas = await prisma.cuenta.findMany({
      include: { empresa: true }
    })
    console.log('\n‚úÖ Cuentas creadas:', cuentas.length)
    cuentas.forEach(c => {
      console.log(`   - ${c.nombre} (${c.empresa.nombre}) - Tipo: ${c.tipo_cuenta}`)
    })

    // Verificar estructura de tablas principales
    const tablas = [
      'entidades', 'movimientos', 'cortes', 'saldos',
      'entidades_empresas', 'cuentas'
    ]

    console.log('\n‚úÖ Verificando tablas principales:')
    for (const tabla of tablas) {
      try {
        await prisma.$queryRaw`SELECT COUNT(*) as count FROM ${tabla}`
        console.log(`   - ${tabla}: ‚úì`)
      } catch (error) {
        console.log(`   - ${tabla}: ‚ùå Error - ${error.message}`)
      }
    }

    console.log('\nüéâ MIGRACI√ìN VERIFICADA EXITOSAMENTE')
    console.log('üìã Nueva estructura implementada:')
    console.log('   ‚Ä¢ Entidades unificadas (clientes/proveedores/empleados)')
    console.log('   ‚Ä¢ Movimientos centralizados')
    console.log('   ‚Ä¢ Sistema de 3 cuentas (cajera/efectivo/fiscal)')
    console.log('   ‚Ä¢ Cortes con campos espec√≠ficos por tipo')
    console.log('   ‚Ä¢ Estados de cuenta con cargos/abonos')

  } catch (error) {
    console.error('‚ùå Error en verificaci√≥n:', error.message)
  } finally {
    await prisma.$disconnect()
  }
}

verifyMigration()