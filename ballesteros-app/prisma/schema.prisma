generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id                 Int              @id @default(autoincrement())
  nombre             String           @db.VarChar(100)
  activa             Boolean?         @default(true)
  created_at         DateTime?        @default(now()) @db.Timestamp(6)
  cortes             Corte[]
  cuentas            Cuenta[]
  entidades_empresas EntidadEmpresa[]
  movimientos        Movimiento[]
  saldos             Saldo[]

  @@map("empresas")
}

model Entidad {
  id                   Int              @id @default(autoincrement())
  nombre               String           @db.VarChar(255)
  telefono             String?          @db.VarChar(20)
  es_cliente           Boolean?         @default(false)
  es_proveedor         Boolean?         @default(false)
  es_empleado          Boolean?         @default(false)
  puesto               String?          @db.VarChar(100)
  puede_operar_caja    Boolean?         @default(false)
  activo               Boolean?         @default(true)
  created_at           DateTime?        @default(now()) @db.Timestamp(6)
  cortes               Corte[]
  entidades_empresas   EntidadEmpresa[]
  movimientos_empleado Movimiento[]     @relation("MovimientoEmpleado")
  movimientos_entidad  Movimiento[]     @relation("MovimientoEntidad")
  saldos               Saldo[]

  @@index([nombre], map: "idx_entidades_nombre")
  @@index([es_cliente, es_proveedor, es_empleado], map: "idx_entidades_tipo")
  @@map("entidades")
}

model EntidadEmpresa {
  id            Int      @id @default(autoincrement())
  entidad_id    Int
  empresa_id    Int
  tipo_relacion String   @db.VarChar(20)
  activo        Boolean? @default(true)
  empresa       Empresa  @relation(fields: [empresa_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  entidad       Entidad  @relation(fields: [entidad_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([entidad_id, empresa_id, tipo_relacion])
  @@map("entidades_empresas")
}

model Saldo {
  id                   Int       @id @default(autoincrement())
  entidad_id           Int
  empresa_id           Int?
  tipo_saldo           String    @db.VarChar(20)
  saldo_inicial        Decimal?  @default(0) @db.Decimal(10, 2)
  total_cargos         Decimal?  @default(0) @db.Decimal(10, 2)
  total_abonos         Decimal?  @default(0) @db.Decimal(10, 2)
  saldo_actual         Decimal?  @default(0) @db.Decimal(10, 2)
  fecha_corte          DateTime? @db.Date
  ultima_actualizacion DateTime? @default(now()) @db.Timestamp(6)
  empresas             Empresa?  @relation(fields: [empresa_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  entidad              Entidad   @relation(fields: [entidad_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([entidad_id, empresa_id, tipo_saldo])
  @@map("saldos")
}

model CategoriaGasto {
  id            Int                 @id @default(autoincrement())
  nombre        String              @db.VarChar(100)
  tipo          String?             @db.VarChar(50)
  activa        Boolean?            @default(true)
  movimientos   Movimiento[]
  subcategorias SubcategoriaGasto[]

  @@map("categorias_gasto")
}

model SubcategoriaGasto {
  id           Int            @id @default(autoincrement())
  categoria_id Int
  nombre       String         @db.VarChar(100)
  movimientos  Movimiento[]
  categoria    CategoriaGasto @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("subcategorias_gasto")
}

model Cuenta {
  id                  Int          @id @default(autoincrement())
  empresa_id          Int
  tipo_cuenta         String       @db.VarChar(20)
  nombre              String       @db.VarChar(100)
  saldo_actual        Decimal?     @default(0) @db.Decimal(10, 2)
  activa              Boolean?     @default(true)
  created_at          DateTime?    @default(now()) @db.Timestamp(6)
  empresa             Empresa      @relation(fields: [empresa_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  movimientos_destino Movimiento[] @relation("CuentaDestino")
  movimientos_origen  Movimiento[] @relation("CuentaOrigen")

  @@map("cuentas")
}

model Corte {
  id                  Int          @id @default(autoincrement())
  empresa_id          Int
  entidad_id          Int
  fecha               DateTime     @db.Date
  sesion              Int?         @default(1)
  venta_neta          Decimal      @db.Decimal(10, 2)
  venta_efectivo      Decimal?     @default(0) @db.Decimal(10, 2)
  venta_credito       Decimal?     @default(0) @db.Decimal(10, 2)
  venta_plataforma    Decimal?     @default(0) @db.Decimal(10, 2)
  cobranza            Decimal?     @default(0) @db.Decimal(10, 2)
  venta_credito_tarjeta Decimal?     @default(0) @db.Decimal(10, 2)
  venta_debito_tarjeta  Decimal?     @default(0) @db.Decimal(10, 2)
  venta_tarjeta         Decimal?     @default(0) @db.Decimal(10, 2)
  venta_transferencia Decimal?     @default(0) @db.Decimal(10, 2)
  retiro_parcial      Decimal?     @default(0) @db.Decimal(10, 2)
  gasto               Decimal?     @default(0) @db.Decimal(10, 2)
  compra              Decimal?     @default(0) @db.Decimal(10, 2)
  prestamo            Decimal?     @default(0) @db.Decimal(10, 2)
  cortesia            Decimal?     @default(0) @db.Decimal(10, 2)
  otros_retiros       Decimal?     @default(0) @db.Decimal(10, 2)
  total_ingresos      Decimal?     @default(0) @db.Decimal(10, 2)
  total_egresos       Decimal?     @default(0) @db.Decimal(10, 2)
  efectivo_esperado   Decimal?     @default(0) @db.Decimal(10, 2)
  diferencia          Decimal?     @default(0) @db.Decimal(10, 2)
  adeudo_generado     Boolean?     @default(false)
  estado              String?      @default("activo") @db.VarChar(20)
  created_at          DateTime?    @default(now()) @db.Timestamp(6)
  empresa             Empresa      @relation(fields: [empresa_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  empleado            Entidad      @relation(fields: [entidad_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  movimientos         Movimiento[]

  @@unique([empresa_id, entidad_id, fecha, sesion])
  @@index([empresa_id, fecha], map: "idx_cortes_empresa_fecha")
  @@index([fecha], map: "idx_cortes_fecha")
  @@map("cortes")
}

model Movimiento {
  id                      Int                @id @default(autoincrement())
  tipo_movimiento         String             @db.VarChar(50)
  es_ingreso              Boolean
  monto                   Decimal            @db.Decimal(10, 2)
  fecha                   DateTime?          @default(now()) @db.Timestamp(6)
  cuenta_origen_id        Int?
  cuenta_destino_id       Int?
  fecha_aplicacion        DateTime?          @db.Date
  empresa_id              Int?
  corte_id                Int?
  entidad_relacionada_id  Int?
  empleado_responsable_id Int?
  categoria_id            Int?
  subcategoria_id         Int?
  forma_pago              String?            @db.VarChar(20)
  plataforma              String?            @db.VarChar(50)
  referencia              String?
  beneficiario            String?            @db.VarChar(255)
  comision                Decimal?           @default(0) @db.Decimal(10, 2)
  created_at              DateTime?          @default(now()) @db.Timestamp(6)
  categoria               CategoriaGasto?    @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  corte                   Corte?             @relation(fields: [corte_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cuenta_destino          Cuenta?            @relation("CuentaDestino", fields: [cuenta_destino_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cuenta_origen           Cuenta?            @relation("CuentaOrigen", fields: [cuenta_origen_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  empleado_responsable    Entidad?           @relation("MovimientoEmpleado", fields: [empleado_responsable_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  empresa                 Empresa?           @relation(fields: [empresa_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  entidad_relacionada     Entidad?           @relation("MovimientoEntidad", fields: [entidad_relacionada_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subcategoria            SubcategoriaGasto? @relation(fields: [subcategoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([corte_id], map: "idx_movimientos_corte")
  @@index([empresa_id, fecha], map: "idx_movimientos_empresa_fecha")
  @@index([entidad_relacionada_id], map: "idx_movimientos_entidad")
  @@index([fecha], map: "idx_movimientos_fecha")
  @@index([tipo_movimiento], map: "idx_movimientos_tipo")
  @@map("movimientos")
}
